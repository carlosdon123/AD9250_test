NAME,DISPLAY_NAME,ALLOWED_RANGES,DEFAULT_VALUE,DESCRIPTION
"device_family","device_family","","Arria 10",""
"device","device","","Unknown",""
"base_device","base_device","","nightfury5es",""
"design_environment","design_environment","","NATIVE",""
"message_level","Message level for rule violations","error warning","error","Specifies the messaging level to use for parameter rule violations. Selecting "error" causes all rule violations to prevent IP generation. Selecting "warning" displays all rule violations as warnings and allows IP generation in spite of violations."
"anlg_voltage","VCCR_GXB and VCCT_GXB supply voltage for the Transceiver","1_1V 1_0V 0_9V","1_0V","Selects the VCCR_GXB and VCCT_GXB supply voltage for the Transceiver."
"anlg_link","Tranceiver Link Type","sr:SR lr:LR","sr","Selects the type of transceiver link. SR-Short Reach (Chip-to-chip communication), LR-Long Reach (Backplane communication)"
"protocol_mode","Transceiver configuration rules","{basic_std:Basic/Custom (Standard PCS)} {basic_std_rm:Basic/Custom w/Rate Match (Standard PCS)} {cpri:CPRI (Auto)} {cpri_rx_tx:CPRI (Manual)} gige:GbE {gige_1588:GbE 1588} {pipe_g1:Gen 1 PIPE} {pipe_g2:Gen 2 PIPE} {pipe_g3:Gen 3 PIPE} {basic_enh:Basic (Enhanced PCS)} interlaken_mode:Interlaken teng_baser_mode:10GBASE-R {teng_1588_mode:10GBASE-R 1588} {teng_baser_krfec_mode:10GBASE-R w/KR FEC} {fortyg_basekr_krfec_mode:40GBASE-R w/KR FEC} {basic_krfec_mode:Basic w/KR FEC} {pcs_direct:PCS Direct}","basic_std","Selects the protocol configuration rules for the transceiver. This parameter governs the rules for correct settings of individual parameters within the PMA and PCS. Certain features of the transceiver are available only for specific protocol configuration rules. This parameter is not a "preset". You must still correctly set all other parameters for your specific protocol and application needs."
"pma_mode","PMA configuration rules","basic SATA:SATA/SAS QPI GPON","basic","Selects the configuration rules for PMA. Options are SATA/SAS, GPON, QPI and basic. Basic should be selected for all modes other than SATA/SAS, GPON, and QPI. SATA/SAS mode can be used only if "Transceiver configuration rules" is selected as Standard PCS. GPON mode can be used only if "Transceiver configuration rules" is selected as Standard or Enhanced PCS. QPI mode can be used only if "Transceiver configuration rules" is selected as PCS Direct. This parameter is not a "preset". You must still correctly set other parameters and enable relavant ports for your specific application needs."
"duplex_mode","Transceiver mode","{duplex:TX/RX Duplex} {tx:TX Simplex} {rx:RX Simplex}","duplex","Selects the transceiver operation mode."
"channels","Number of data channels","1:96","1","Specifies the total number of data channels."
"set_data_rate","Data rate","","1250","Specifies the transceiver data rate in units of Mbps (megabits per second)."
"rcfg_iface_enable","Enable datapath and interface reconfiguration","{0 1}","0","Enables the ability to preconfigure and dynamically switch between the Standard PCS, Enhanced PCS, and PCS direct transceiver datapaths."
"enable_simple_interface","Enable simplified data interface","{0 1}","0","When selected the Native PHY presents a simplified data and control interface between the FPGA and transceiver. When not selected the Native PHY presents the full raw data interface to the transceiver. You need to understand the mapping of data and control signals within the interface. This option cannot be enabled if you want to perform dynamic interface reconfiguration as only a fixed subset of the data and control signals are provided."
"enable_split_interface","Provide separate interface for each channel","{0 1}","0","When selected the Native PHY presents separate data, reset, and clock interfaces for each channel rather than a wide bus."
"set_disconnect_analog_resets","Disconnect analog resets","{0 1}","0","When selected the Native PHY will disconnect the tx_analogreset and rx_analogreset. This can be enabled only after consultation with Altera factory/applications."
"enable_transparent_pcs","Enable transparent PCS","{0 1}","0",""
"tx_pma_clk_div","TX local clock division factor","1 2 4 8","1","Specifies the TX serial clock division factor. The transceiver has the ability to further divide the TX serial clock from the TX PLL before use. This parameter specifies the division factor to use. Example: A PLL data rate of "10000 Mbps" and a local division factor of 8 results in a channel data rate of "1250 Mbps""
"plls","Number of TX PLL clock inputs per channel","1 2 3 4","1","Specifies the desired number of TX PLL clock inputs per channel. This is used when you intend to dynamically switch between TX PLL clock sources. The Native PHY presents up to 4 clock inputs per channel to allow dynamically input clock switching."
"pll_select","Initial TX PLL clock input selection","0","0","Specifies the initially selected TX PLL clock input. This indicates the starting clock input selection used for this configuration when dynamically switching between multiple TX PLL clock inputs."
"enable_port_rx_seriallpbken_tx","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"cdr_refclk_cnt","Number of CDR reference clocks","1 2 3 4 5","1","Specifies the number of input reference clocks for the RX CDRs. The same bus of reference clocks feeds all RX CDRs in the netlist."
"cdr_refclk_select","Selected CDR reference clock","0","0","Specifies the initially selected reference clock input to the RX CDRs."
"set_cdr_refclk_freq","Selected CDR reference clock frequency","50.000000 50.632911 51.282051 51.948052 52.631579 53.333333 54.054054 54.794521 55.555556 56.338028 57.142857 57.971014 58.823529 59.701493 60.606061 61.538462 62.500000 63.492063 64.516129 65.573770 66.666667 67.796610 68.965517 70.175439 71.428571 72.727273 74.074074 75.471698 76.923077 78.431373 80.000000 81.632653 83.333333 85.106383 86.956522 88.888889 90.909091 93.023256 95.238095 97.560976 100.000000 101.265823 102.564103 103.896104 105.263158 106.666667 108.108108 109.589041 111.111111 112.676056 114.285714 115.942029 117.647059 119.402985 121.212121 123.076923 125.000000 126.984127 129.032258 131.147541 133.333333 135.593220 137.931034 140.350877 142.857143 145.454545 148.148148 150.943396 153.846154 156.862745 160.000000 163.265306 166.666667 170.212766 173.913043 177.777778 181.818182 186.046512 190.476190 195.121951 200.000000 202.531646 205.128205 207.792208 210.526316 213.333333 216.216216 219.178082 222.222222 225.352113 228.571429 231.884058 235.294118 238.805970 242.424242 246.153846 250.000000 253.968254 258.064516 262.295082 266.666667 271.186441 275.862069 280.701754 285.714286 290.909091 296.296296 301.886792 307.692308 313.725490 320.000000 326.530612 333.333333 340.425532 347.826087 355.555556 363.636364 372.093023 380.952381 390.243902 400.000000 405.063291 410.256410 415.584416 421.052632 426.666667 432.432432 438.356164 444.444444 450.704225 457.142857 463.768116 470.588235 477.611940 484.848485 492.307692 500.000000 507.936508 516.129032 524.590164 533.333333 542.372881 551.724138 561.403509 571.428571 581.818182 592.592593 603.773585 615.384615 627.450980 640.000000 653.061224 666.666667 680.851064 695.652174 711.111111 727.272727 744.186047 761.904762 780.487805 800.000000 200.0","125.000","Specifies the frequency in MHz of the selected reference clock input to the CDR."
"rx_ppm_detect_threshold","PPM detector threshold","100 300 500 1000","1000","Specifies the tolerable difference in PPM (parts per million) between the RX CDR reference clock and the recovered clock from the RX data input."
"rx_pma_ctle_adaptation_mode","CTLE mode","manual one-time:triggered","manual","Specifies the operation mode for Continuous Time Linear Equalizer (CTLE). Options are "manual" (where user is expected to set CTLE through qsf assignment or DPRIO) and "triggered" (where CTLE is adapted at user request - (i.e. resetting adaptation and requesting adaptation start through DPRIO)). CTLE boosts the near Nyquist frequency content of the received signal."
"rx_pma_dfe_adaptation_mode","DFE mode","{continuous:adaptation enabled} manual disabled","disabled","Specifies the operation mode for Decision Feedback Equalizer (DFE). Options are "disable" (where DFE is bypassed), "adaptation enabled" (where the DFE taps are adapted automatically), "manual" (where the DFE is expected to be configured manually by user through qsf assignments or DPRIO)."
"enable_ports_adaptation","Enable adaptation control ports","{0 1}","0","Enables the optional rx_adapt_reset, and rx_adapt_start ports. These ports are used to control the adaptation engine (adaptation engine can also be controlled through DPRIO interface). Even if they are exposed, the ports are not usable until they are activated through DPRIO interface. For adaptation engine control: user needs to apply the reset first, after releasing reset, assert the start. The adaptation status can be observed through DPRIO interface."
"enable_port_rx_analog_reset_ack","Enable rx_analog_reset_ack port","{0 1}","0","Enables the optional rx_analog_reset_ack output. This port should not be used for register mode data transfers."
"enable_port_rx_pma_clkout","Enable rx_pma_clkout port","{0 1}","0","Enables the optional rx_pma_clkout output clock. This is the recovered parallel clock from the RX CDR. This port is not to be used to clock the data interface."
"enable_port_rx_pma_div_clkout","Enable rx_pma_div_clkout port","{0 1}","0","Enables the optional rx_pma_div_clkout output clock. This port should not be used for register mode data transfers."
"enable_port_rx_pma_iqtxrx_clkout","Enable rx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional rx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the RX PMA output clock to the input of a PLL."
"enable_port_rx_pma_clkslip","Enable rx_pma_clkslip port","{0 1}","0","Enables the optional rx_pma_clkslip control input port. A rising edge on this signal causes the RX serializer to slip the serial data by one clock cycle (2 UI)."
"enable_port_rx_pma_qpipulldn","Enable rx_pma_qpipulldn port (QPI)","{0 1}","0","Enables the rx_pma_qpipulldn control input port. This port is used only in QPI applications."
"enable_port_rx_is_lockedtodata","Enable rx_is_lockedtodata port","{0 1}","1","Enables the optional rx_is_lockedtodata status output port. This signal indicates that the RX CDR is currently in lock to data mode or is attempting to lock to the incoming data stream. This is an asynchronous output signal."
"enable_port_rx_is_lockedtoref","Enable rx_is_lockedtoref port","{0 1}","1","Enables the optional rx_is_lockedtoref status output port. This signal indicates that the RX CDR is currently locked to the CDR reference clock. This is an asynchronous output signal."
"enable_ports_rx_manual_cdr_mode","Enable rx_set_locktodata and rx_set_locktoref ports","{0 1}","0","Enables the optional rx_set_locktodata and rx_set_locktoref control input ports. These ports are used to manually control the lock mode of the RX CDR. These are asynchonous input signals."
"enable_port_rx_signaldetect","Enable rx_signaldetect port","{0 1}","0","Enables the optional rx_signaldetect status output port. The assertion of this signal indicates detection of an input signal to the RX PMA. Refer to the user guide for applications and limitations. This is an asynchronous output signal."
"enable_port_rx_seriallpbken","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"enable_ports_rx_prbs","Enable PRBS verifier control and status ports","{0 1}","0","Enables the optional rx_prbs_err, rx_prbs_err_clr, and rx_prbs_done ports. These ports are used to control and collect status from the internal PRBS verifier."
"std_pcs_pma_width","Standard PCS / PMA interface width","8 10 16 20","10","Specifies the data interface width between the 'Standard PCS' and the transceiver PMA."
"std_low_latency_bypass_enable","Enable 'Standard PCS' low latency mode","{0 1}","0","Enables the low latency path for the 'Standard PCS'. Enabling this option bypasses the individual functional blocks within the 'Standard PCS' to provide the lowest latency datapath from the PMA through the 'Standard PCS'."
"enable_hip","Enable PCIe hard IP support","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter indicates that the Native PHY variant will be connected to the PCIe hard IP."
"enable_skp_ports","Enable SKP ports for Gen3","{0 1}","0","Enable SKP workaround ports for Gen3. This is available only in HIP mode."
"enable_hard_reset","Enable hard reset controller (HIP)","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter enables the hard reset controller for use with PCIe HIP."
"set_hip_cal_en","Enable PCIe hard IP calibration","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter prioritizes the calibration for PCIe hard IP channels."
"std_rx_pcfifo_mode","RX FIFO mode","low_latency register_fifo","low_latency","Specifies the mode for the 'Standard PCS' RX FIFO."
"enable_port_rx_std_pcfifo_full","Enable rx_std_pcfifo_full port","{0 1}","0","Enables the optional rx_std_pcfifo_full status output port. This signal indicates when the standard RX phase compensation FIFO has reached the full threshold. This signal is synchronous with 'rx_std_clkout'."
"enable_port_rx_std_pcfifo_empty","Enable rx_std_pcfifo_empty port","{0 1}","0","Enables the optional rx_std_pcfifo_empty status output port. This signal indicates when the standard RX phase compensation FIFO has reached the full threshold. This signal is synchronous with 'rx_std_clkout'."
"std_rx_byte_deser_mode","RX byte deserializer mode","Disabled {Deserialize x2} {Deserialize x4}","Disabled","Specifies the mode for the RX byte deserializer in the 'Standard PCS' The transceiver architecture allows the 'Standard PCS' to operate at double or quadruple the data width of the PMA deserializer. This allows the PCS to run at a lower internal clock frequency and accommodate a wider range of FPGA interface widths. This option is limited by the target protocol mode."
"std_rx_8b10b_enable","Enable RX 8B/10B decoder","{0 1}","0","Enables the 8B/10B decoder in the 'Standard PCS'."
"std_rx_rmfifo_mode","RX rate match FIFO mode","disabled:Disabled {basic (single width):Basic 10-bit PMA} {basic (double width):Basic 20-bit PMA} gige:GbE pipe:PIPE {pipe 0ppm:PIPE 0ppm}","disabled","Specifies the operation mode of the RX rate match FIFO in the 'Standard PCS'."
"std_rx_rmfifo_pattern_n","RX rate match insert/delete -ve pattern (hex)","-2147483648:2147483647","0","Specifies the -ve (negative) disparity value for the RX rate match FIFO. The value is 20 bits and specified as a hexadecimal string."
"std_rx_rmfifo_pattern_p","RX rate match insert/delete +ve pattern (hex)","-2147483648:2147483647","0","Specifies the +ve (positive) disparity value for the RX rate match FIFO. The value is 20 bits and specified as a hexadecimal string."
"enable_port_rx_std_rmfifo_full","Enable rx_std_rmfifo_full port","{0 1}","0","Enables the optional rx_std_rmfifo_full status output port. This signal indicates when the standard RX rate match FIFO has reached the full threshold."
"enable_port_rx_std_rmfifo_empty","Enable rx_std_rmfifo_empty port","{0 1}","0","Enables the optional rx_std_rmfifo_empty status output port. This signal indicates when the standard RX rate match FIFO has reached the empty threshold."
"pcie_rate_match","PCI Express Gen 3 rate match FIFO mode","Bypass {0 ppm} {600 ppm}","Bypass","Specifies the PPM tolerance mode of the PCI Express Gen 3 rate match FIFO."
"std_rx_word_aligner_mode","RX word aligner mode","bitslip {manual (PLD controlled):manual (FPGA Fabric controlled)} {synchronous state machine} {deterministic latency}","bitslip","Specifies the RX word aligner mode for the 'Standard PCS'."
"std_rx_word_aligner_pattern_len","RX word aligner pattern length","7 8 10 16 20 32 40","7","Specifies the RX word alignment pattern length."
"std_rx_word_aligner_pattern","RX word aligner pattern (hex)","","0","Specifies the RX word alignment pattern."
"std_rx_word_aligner_rknumber","Number of word alignment patterns to achieve sync","0:255","3","Specifies the number of valid word alignment patterns that must be received before the word aligner achieves sync lock."
"std_rx_word_aligner_renumber","Number of invalid data words to lose sync","0:63","3","Specifies the number of invalid data codes or disparity errors that must be received before the word aligner loses sync lock."
"std_rx_word_aligner_rgnumber","Number of valid data words to decrement error count","0:255","3","Specifies the number of valid data codes that must be received to decrement the error counter. If enough valid data codes are received to decrement the error count to zero the word aligner returns to sync lock."
"std_rx_word_aligner_rvnumber","Number of valid data patterns required to achieve word alignment","0:8191","0","Intended to be used only for SRIO V2.1."
"std_rx_word_aligner_fast_sync_status_enable","Enable fast sync status reporting for deterministic latency SM","{0 1}","0","If this parameter is selected, the word align status signal is asserted high once cycle slip operation between PCS and PMA is done. Otherwise the word align status is asserted after the cycle slip operation is done and it is detected that the word align pattern comes in aligned to the PCS. This parameter selection takes effect only if the selected protocol mode is CPRI (Auto)."
"enable_port_rx_std_wa_patternalign","Enable rx_std_wa_patternalign port","{0 1}","0","Enables the optional rx_std_wa_patternalign control input port. A rising edge on this signal causes the word aligner to align to the next incoming word alignment pattern when the word aligner is configured in "manual" mode."
"enable_port_rx_std_wa_a1a2size","Enable rx_std_wa_a1a2size port","{0 1}","0","Enables the optional rx_std_a1a2size control input port."
"enable_port_rx_std_bitslipboundarysel","Enable rx_std_bitslipboundarysel port","{0 1}","0","Enables the optional rx_std_bitslipboundarysel status output port."
"enable_port_rx_std_bitslip","Enable rx_bitslip port","{0 1}","0","Enables the optional rx_bitslip control input port. This is the shared RX bitslip control port for the Standard and Enhanced PCS datapaths."
"std_rx_bitrev_enable","Enable RX bit reversal","{0 1}","0","Enables receiver bit order reversal. When enabled, the 'rx_std_bitrev_ena' control port controls bit reversal of the RX parallel data after passing from the PMA to the PCS. When bit reversal is activated the received RX data bit order changes to MSB->LSB rather than the normal LSB->MSB"
"enable_port_rx_std_bitrev_ena","Enable rx_std_bitrev_ena port","{0 1}","0","Enables the optional rx_std_bitrev_ena control input port. When receiver bit order reversal is enabled the assertion of this signal causes the received RX data bit order to be changed to MSB->LSB rather than the normal LSB->MSB. This is an asynchronous input signal."
"std_rx_byterev_enable","Enable RX byte reversal","{0 1}","0","Enables receiver byte order reversal. When the PCS / PMA interface width is 16 or 20 bits the PCS can swap the ordering of the individual 8- or 10-bit words. When enabled, the 'rx_std_byterev_ena' port controls byte swapping. This option is not valid under all protocol modes."
"enable_port_rx_std_byterev_ena","Enable rx_std_byterev_ena port","{0 1}","0","Enables the optional rx_std_byterev_ena control input port. When receiver byte order reversal is enabled the assertion of this signal swaps the order of individual 8- or 10-bit words received from the PMA."
"std_rx_polinv_enable","Enable RX polarity inversion","{0 1}","0","Enables RX bit polarity inversion. When enabled, the 'rx_polinv' control port controls polarity inversion of the RX parallel data bits after passing from the PMA."
"enable_port_rx_polinv","Enable rx_polinv port","{0 1}","0","Enables the optional rx_polinv control input port. When RX bit polarity inversion is enabled the assertion of this signal causes the RX bit polarity to be inverted."
"enable_port_rx_std_signaldetect","Enable rx_std_signaldetect port","{0 1}","0","Enables the optional rx_std_signaldetect status output port. The assertion of this signal indicates that a signal has been detected on the receiver. The signal detect threshold can be specified through Quartus QSF assignments."
"enable_ports_pipe_rx_elecidle","Enable PCIe electrical idle control and status ports","{0 1}","0","Enables the pipe_rx_eidleinfersel and pipe_rx_elecidle ports. These ports are used for PCI Express configurations."
"enable_port_pipe_rx_polarity","Enable PCIe pipe_rx_polarity port","{0 1}","0","Enables the pipe_rx_polarity input control port. This port controls channel signal polarity for PCI Express configurations. When the 'Standard PCS datapath' is configured for PCIe protocol modes, the assertion of this signal causes the RX bit polarity to be inverted. For other protocol modes the optional 'rx_polinv' port controls RX bit polarity inversion."
"generate_docs","Generate parameter documentation file","{0 1}","0","When enabled, generation produces a Comma-Separated Value file (.csv) with descriptions of the Native PHY parameters."
"rcfg_enable","Enable dynamic reconfiguration","{0 1}","0","Enables the dynamic reconfiguration interface."
