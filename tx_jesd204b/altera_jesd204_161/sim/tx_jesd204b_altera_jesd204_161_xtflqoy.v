// tx_jesd204b_altera_jesd204_161_xtflqoy.v

// This file was auto-generated from altera_jesd204_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 16.1 203

`timescale 1 ps / 1 ps
module tx_jesd204b_altera_jesd204_161_xtflqoy #(
		parameter DEVICE_FAMILY            = "Arria 10",
		parameter SUBCLASSV                = 1,
		parameter PCS_CONFIG               = "JESD_PCS_CFG1",
		parameter L                        = 2,
		parameter M                        = 2,
		parameter F                        = 2,
		parameter N                        = 14,
		parameter N_PRIME                  = 16,
		parameter S                        = 1,
		parameter K                        = 16,
		parameter SCR                      = 0,
		parameter CS                       = 2,
		parameter CF                       = 0,
		parameter HD                       = 0,
		parameter ECC_EN                   = 0,
		parameter DLB_TEST                 = 0,
		parameter PHADJ                    = 0,
		parameter ADJCNT                   = 0,
		parameter ADJDIR                   = 0,
		parameter OPTIMIZE                 = 0,
		parameter DID                      = 0,
		parameter BID                      = 0,
		parameter LID0                     = 0,
		parameter FCHK0                    = 50,
		parameter LID1                     = 1,
		parameter FCHK1                    = 51,
		parameter LID2                     = 2,
		parameter FCHK2                    = 0,
		parameter LID3                     = 3,
		parameter FCHK3                    = 0,
		parameter LID4                     = 4,
		parameter FCHK4                    = 0,
		parameter LID5                     = 5,
		parameter FCHK5                    = 0,
		parameter LID6                     = 6,
		parameter FCHK6                    = 0,
		parameter LID7                     = 7,
		parameter FCHK7                    = 0,
		parameter JESDV                    = 1,
		parameter PMA_WIDTH                = 32,
		parameter SER_SIZE                 = 4,
		parameter FK                       = 32,
		parameter RES1                     = 0,
		parameter RES2                     = 0,
		parameter BIT_REVERSAL             = 0,
		parameter BYTE_REVERSAL            = 0,
		parameter ALIGNMENT_PATTERN        = 658812,
		parameter PULSE_WIDTH              = 2,
		parameter LS_FIFO_DEPTH            = 32,
		parameter LS_FIFO_WIDTHU           = 5,
		parameter UNUSED_TX_PARALLEL_WIDTH = 92,
		parameter UNUSED_RX_PARALLEL_WIDTH = 72,
		parameter XCVR_PLL_LOCKED_WIDTH    = 2,
		parameter RECONFIG_ADDRESS_WIDTH   = 11
	) (
		input  wire        txlink_clk,                 //                txlink_clk.clk
		input  wire        txlink_rst_n_reset_n,       //              txlink_rst_n.reset_n
		input  wire        jesd204_tx_avs_clk,         //        jesd204_tx_avs_clk.clk
		input  wire        jesd204_tx_avs_rst_n,       //      jesd204_tx_avs_rst_n.reset_n
		input  wire        jesd204_tx_avs_chipselect,  //            jesd204_tx_avs.chipselect
		input  wire [7:0]  jesd204_tx_avs_address,     //                          .address
		input  wire        jesd204_tx_avs_read,        //                          .read
		output wire [31:0] jesd204_tx_avs_readdata,    //                          .readdata
		output wire        jesd204_tx_avs_waitrequest, //                          .waitrequest
		input  wire        jesd204_tx_avs_write,       //                          .write
		input  wire [31:0] jesd204_tx_avs_writedata,   //                          .writedata
		input  wire [63:0] jesd204_tx_link_data,       //           jesd204_tx_link.data
		input  wire        jesd204_tx_link_valid,      //                          .valid
		output wire        jesd204_tx_link_ready,      //                          .ready
		output wire        jesd204_tx_int,             //            jesd204_tx_int.irq
		input  wire        sysref,                     //                    sysref.export
		input  wire        sync_n,                     //                    sync_n.export
		output wire        dev_sync_n,                 //                dev_sync_n.export
		input  wire        mdev_sync_n,                //               mdev_sync_n.export
		output wire        jesd204_tx_frame_ready,     //    jesd204_tx_frame_ready.export
		output wire [4:0]  csr_l,                      //                     csr_l.export
		output wire [7:0]  csr_f,                      //                     csr_f.export
		output wire [4:0]  csr_k,                      //                     csr_k.export
		output wire [7:0]  csr_m,                      //                     csr_m.export
		output wire [1:0]  csr_cs,                     //                    csr_cs.export
		output wire [4:0]  csr_n,                      //                     csr_n.export
		output wire [4:0]  csr_np,                     //                    csr_np.export
		output wire [4:0]  csr_s,                      //                     csr_s.export
		output wire        csr_hd,                     //                    csr_hd.export
		output wire [4:0]  csr_cf,                     //                    csr_cf.export
		output wire [1:0]  csr_lane_powerdown,         //        csr_lane_powerdown.export
		output wire [3:0]  csr_tx_testmode,            //           csr_tx_testmode.export
		output wire [31:0] csr_tx_testpattern_a,       //      csr_tx_testpattern_a.export
		output wire [31:0] csr_tx_testpattern_b,       //      csr_tx_testpattern_b.export
		output wire [31:0] csr_tx_testpattern_c,       //      csr_tx_testpattern_c.export
		output wire [31:0] csr_tx_testpattern_d,       //      csr_tx_testpattern_d.export
		input  wire        jesd204_tx_frame_error,     //    jesd204_tx_frame_error.export
		output wire [63:0] jesd204_tx_dlb_data,        //       jesd204_tx_dlb_data.export
		output wire [7:0]  jesd204_tx_dlb_kchar_data,  // jesd204_tx_dlb_kchar_data.export
		input  wire [1:0]  pll_locked,                 //                pll_locked.pll_locked
		output wire [1:0]  txphy_clk,                  //                 txphy_clk.export
		output wire [1:0]  tx_serial_data,             //            tx_serial_data.tx_serial_data
		input  wire [1:0]  tx_analogreset,             //            tx_analogreset.tx_analogreset
		input  wire [1:0]  tx_digitalreset,            //           tx_digitalreset.tx_digitalreset
		output wire [1:0]  tx_cal_busy,                //               tx_cal_busy.tx_cal_busy
		input  wire [5:0]  tx_bonding_clocks_ch0,      //     tx_bonding_clocks_ch0.clk
		input  wire [5:0]  tx_bonding_clocks_ch1       //     tx_bonding_clocks_ch1.clk
	);

	wire  [1:0] inst_tx_csr_lane_polarity_export;        // inst_tx:csr_lane_polarity -> inst_phy:csr_lane_polarity
	wire        inst_tx_csr_bit_reversal_export;         // inst_tx:csr_bit_reversal -> inst_phy:csr_bit_reversal
	wire        inst_tx_csr_byte_reversal_export;        // inst_tx:csr_byte_reversal -> inst_phy:csr_byte_reversal
	wire  [1:0] inst_phy_phy_csr_tx_pcfifo_full_export;  // inst_phy:phy_csr_tx_pcfifo_full -> inst_tx:phy_csr_tx_pcfifo_full
	wire  [1:0] inst_phy_phy_csr_tx_pcfifo_empty_export; // inst_phy:phy_csr_tx_pcfifo_empty -> inst_tx:phy_csr_tx_pcfifo_empty
	wire  [1:0] inst_tx_phy_tx_elecidle_export;          // inst_tx:phy_tx_elecidle -> inst_phy:phy_tx_elecidle

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (DEVICE_FAMILY != "Arria 10")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					device_family_check ( .error(1'b1) );
		end
		if (SUBCLASSV != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					subclassv_check ( .error(1'b1) );
		end
		if (PCS_CONFIG != "JESD_PCS_CFG1")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pcs_config_check ( .error(1'b1) );
		end
		if (L != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					l_check ( .error(1'b1) );
		end
		if (M != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					m_check ( .error(1'b1) );
		end
		if (F != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					f_check ( .error(1'b1) );
		end
		if (N != 14)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					n_check ( .error(1'b1) );
		end
		if (N_PRIME != 16)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					n_prime_check ( .error(1'b1) );
		end
		if (S != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					s_check ( .error(1'b1) );
		end
		if (K != 16)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					k_check ( .error(1'b1) );
		end
		if (SCR != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					scr_check ( .error(1'b1) );
		end
		if (CS != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					cs_check ( .error(1'b1) );
		end
		if (CF != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					cf_check ( .error(1'b1) );
		end
		if (HD != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					hd_check ( .error(1'b1) );
		end
		if (ECC_EN != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					ecc_en_check ( .error(1'b1) );
		end
		if (DLB_TEST != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					dlb_test_check ( .error(1'b1) );
		end
		if (PHADJ != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					phadj_check ( .error(1'b1) );
		end
		if (ADJCNT != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					adjcnt_check ( .error(1'b1) );
		end
		if (ADJDIR != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					adjdir_check ( .error(1'b1) );
		end
		if (OPTIMIZE != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					optimize_check ( .error(1'b1) );
		end
		if (DID != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					did_check ( .error(1'b1) );
		end
		if (BID != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					bid_check ( .error(1'b1) );
		end
		if (LID0 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid0_check ( .error(1'b1) );
		end
		if (FCHK0 != 50)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk0_check ( .error(1'b1) );
		end
		if (LID1 != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid1_check ( .error(1'b1) );
		end
		if (FCHK1 != 51)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk1_check ( .error(1'b1) );
		end
		if (LID2 != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid2_check ( .error(1'b1) );
		end
		if (FCHK2 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk2_check ( .error(1'b1) );
		end
		if (LID3 != 3)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid3_check ( .error(1'b1) );
		end
		if (FCHK3 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk3_check ( .error(1'b1) );
		end
		if (LID4 != 4)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid4_check ( .error(1'b1) );
		end
		if (FCHK4 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk4_check ( .error(1'b1) );
		end
		if (LID5 != 5)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid5_check ( .error(1'b1) );
		end
		if (FCHK5 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk5_check ( .error(1'b1) );
		end
		if (LID6 != 6)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid6_check ( .error(1'b1) );
		end
		if (FCHK6 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk6_check ( .error(1'b1) );
		end
		if (LID7 != 7)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					lid7_check ( .error(1'b1) );
		end
		if (FCHK7 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fchk7_check ( .error(1'b1) );
		end
		if (JESDV != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					jesdv_check ( .error(1'b1) );
		end
		if (PMA_WIDTH != 32)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pma_width_check ( .error(1'b1) );
		end
		if (SER_SIZE != 4)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					ser_size_check ( .error(1'b1) );
		end
		if (FK != 32)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					fk_check ( .error(1'b1) );
		end
		if (RES1 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					res1_check ( .error(1'b1) );
		end
		if (RES2 != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					res2_check ( .error(1'b1) );
		end
		if (BIT_REVERSAL != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					bit_reversal_check ( .error(1'b1) );
		end
		if (BYTE_REVERSAL != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					byte_reversal_check ( .error(1'b1) );
		end
		if (ALIGNMENT_PATTERN != 658812)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					alignment_pattern_check ( .error(1'b1) );
		end
		if (PULSE_WIDTH != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pulse_width_check ( .error(1'b1) );
		end
		if (LS_FIFO_DEPTH != 32)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					ls_fifo_depth_check ( .error(1'b1) );
		end
		if (LS_FIFO_WIDTHU != 5)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					ls_fifo_widthu_check ( .error(1'b1) );
		end
		if (UNUSED_TX_PARALLEL_WIDTH != 92)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					unused_tx_parallel_width_check ( .error(1'b1) );
		end
		if (UNUSED_RX_PARALLEL_WIDTH != 72)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					unused_rx_parallel_width_check ( .error(1'b1) );
		end
		if (XCVR_PLL_LOCKED_WIDTH != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					xcvr_pll_locked_width_check ( .error(1'b1) );
		end
		if (RECONFIG_ADDRESS_WIDTH != 11)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					reconfig_address_width_check ( .error(1'b1) );
		end
	endgenerate

	altera_jesd204_tx_base #(
		.DEVICE_FAMILY ("Arria 10"),
		.SUBCLASSV     (1),
		.L             (2),
		.M             (2),
		.F             (2),
		.N             (14),
		.N_PRIME       (16),
		.S             (1),
		.K             (16),
		.SCR           (0),
		.CS            (2),
		.CF            (0),
		.HD            (0),
		.ADJCNT        (0),
		.ADJDIR        (0),
		.PHADJ         (0),
		.OPTIMIZE      (0),
		.DID           (0),
		.BID           (0),
		.LID0          (0),
		.FCHK0         (50),
		.LID1          (1),
		.FCHK1         (51),
		.LID2          (2),
		.FCHK2         (0),
		.LID3          (3),
		.FCHK3         (0),
		.LID4          (4),
		.FCHK4         (0),
		.LID5          (5),
		.FCHK5         (0),
		.LID6          (6),
		.FCHK6         (0),
		.LID7          (7),
		.FCHK7         (0),
		.JESDV         (1),
		.PMA_WIDTH     (32),
		.SER_SIZE      (4),
		.FK            (32),
		.RES1          (0),
		.RES2          (0),
		.BIT_REVERSAL  (0),
		.BYTE_REVERSAL (0),
		.PULSE_WIDTH   (2)
	) inst_tx (
		.txlink_clk                 (txlink_clk),                              //                txlink_clk.clk
		.txlink_rst_n               (txlink_rst_n_reset_n),                    //              txlink_rst_n.reset_n
		.jesd204_tx_avs_clk         (jesd204_tx_avs_clk),                      //        jesd204_tx_avs_clk.clk
		.jesd204_tx_avs_rst_n       (jesd204_tx_avs_rst_n),                    //      jesd204_tx_avs_rst_n.reset_n
		.jesd204_tx_avs_chipselect  (jesd204_tx_avs_chipselect),               //            jesd204_tx_avs.chipselect
		.jesd204_tx_avs_address     (jesd204_tx_avs_address),                  //                          .address
		.jesd204_tx_avs_read        (jesd204_tx_avs_read),                     //                          .read
		.jesd204_tx_avs_readdata    (jesd204_tx_avs_readdata),                 //                          .readdata
		.jesd204_tx_avs_waitrequest (jesd204_tx_avs_waitrequest),              //                          .waitrequest
		.jesd204_tx_avs_write       (jesd204_tx_avs_write),                    //                          .write
		.jesd204_tx_avs_writedata   (jesd204_tx_avs_writedata),                //                          .writedata
		.jesd204_tx_link_data       (jesd204_tx_link_data),                    //                   avst_tx.data
		.jesd204_tx_link_valid      (jesd204_tx_link_valid),                   //                          .valid
		.jesd204_tx_link_ready      (jesd204_tx_link_ready),                   //                          .ready
		.dev_sync_n                 (dev_sync_n),                              //                dev_sync_n.export
		.mdev_sync_n                (mdev_sync_n),                             //               mdev_sync_n.export
		.sysref                     (sysref),                                  //                    sysref.export
		.sync_n                     (sync_n),                                  //                    sync_n.export
		.jesd204_tx_int             (jesd204_tx_int),                          //            jesd204_tx_int.irq
		.csr_hd                     (csr_hd),                                  //                    csr_hd.export
		.csr_cs                     (csr_cs),                                  //                    csr_cs.export
		.csr_l                      (csr_l),                                   //                     csr_l.export
		.csr_k                      (csr_k),                                   //                     csr_k.export
		.csr_n                      (csr_n),                                   //                     csr_n.export
		.csr_np                     (csr_np),                                  //                    csr_np.export
		.csr_s                      (csr_s),                                   //                     csr_s.export
		.csr_cf                     (csr_cf),                                  //                    csr_cf.export
		.csr_f                      (csr_f),                                   //                     csr_f.export
		.csr_m                      (csr_m),                                   //                     csr_m.export
		.csr_lane_powerdown         (csr_lane_powerdown),                      //        csr_lane_powerdown.export
		.csr_lane_polarity          (inst_tx_csr_lane_polarity_export),        //         csr_lane_polarity.export
		.csr_bit_reversal           (inst_tx_csr_bit_reversal_export),         //          csr_bit_reversal.export
		.csr_byte_reversal          (inst_tx_csr_byte_reversal_export),        //         csr_byte_reversal.export
		.jesd204_tx_frame_error     (jesd204_tx_frame_error),                  //    jesd204_tx_frame_error.export
		.jesd204_tx_frame_ready     (jesd204_tx_frame_ready),                  //    jesd204_tx_frame_ready.export
		.jesd204_tx_pcs_data        (jesd204_tx_dlb_data),                     //       jesd204_tx_pcs_data.export
		.jesd204_tx_pcs_kchar_data  (jesd204_tx_dlb_kchar_data),               // jesd204_tx_pcs_kchar_data.export
		.phy_csr_pll_locked         (pll_locked),                              //        phy_csr_pll_locked.pll_locked
		.phy_csr_tx_cal_busy        (tx_cal_busy),                             //       phy_csr_tx_cal_busy.tx_cal_busy
		.phy_csr_tx_pcfifo_full     (inst_phy_phy_csr_tx_pcfifo_full_export),  //    phy_csr_tx_pcfifo_full.export
		.phy_csr_tx_pcfifo_empty    (inst_phy_phy_csr_tx_pcfifo_empty_export), //   phy_csr_tx_pcfifo_empty.export
		.phy_tx_elecidle            (inst_tx_phy_tx_elecidle_export),          //           phy_tx_elecidle.export
		.csr_tx_testmode            (csr_tx_testmode),                         //           csr_tx_testmode.export
		.csr_tx_testpattern_a       (csr_tx_testpattern_a),                    //      csr_tx_testpattern_a.export
		.csr_tx_testpattern_b       (csr_tx_testpattern_b),                    //      csr_tx_testpattern_b.export
		.csr_tx_testpattern_c       (csr_tx_testpattern_c),                    //      csr_tx_testpattern_c.export
		.csr_tx_testpattern_d       (csr_tx_testpattern_d)                     //      csr_tx_testpattern_d.export
	);

	tx_jesd204b_altera_jesd204_phy_161_bhvxniy #(
		.DEVICE_FAMILY            ("Arria 10"),
		.L                        (2),
		.PCS_CONFIG               ("JESD_PCS_CFG1"),
		.PMA_WIDTH                (32),
		.SER_SIZE                 (4),
		.ALIGNMENT_PATTERN        (658812),
		.UNUSED_TX_PARALLEL_WIDTH (92),
		.UNUSED_RX_PARALLEL_WIDTH (72),
		.XCVR_PLL_LOCKED_WIDTH    (2),
		.RECONFIG_ADDRESS_WIDTH   (11)
	) inst_phy (
		.txlink_clk                (txlink_clk),                              //                txlink_clk.clk
		.txlink_rst_n              (txlink_rst_n_reset_n),                    //              txlink_rst_n.reset_n
		.jesd204_tx_pcs_data       (jesd204_tx_dlb_data),                     //       jesd204_tx_pcs_data.export
		.jesd204_tx_pcs_kchar_data (jesd204_tx_dlb_kchar_data),               // jesd204_tx_pcs_kchar_data.export
		.csr_lane_polarity         (inst_tx_csr_lane_polarity_export),        //         csr_lane_polarity.export
		.csr_bit_reversal          (inst_tx_csr_bit_reversal_export),         //          csr_bit_reversal.export
		.csr_byte_reversal         (inst_tx_csr_byte_reversal_export),        //         csr_byte_reversal.export
		.csr_lane_powerdown        (csr_lane_powerdown),                      //        csr_lane_powerdown.export
		.phy_csr_tx_cal_busy       (tx_cal_busy),                             //       phy_csr_tx_cal_busy.tx_cal_busy
		.phy_tx_elecidle           (inst_tx_phy_tx_elecidle_export),          //           phy_tx_elecidle.export
		.phy_csr_tx_pcfifo_full    (inst_phy_phy_csr_tx_pcfifo_full_export),  //    phy_csr_tx_pcfifo_full.export
		.phy_csr_tx_pcfifo_empty   (inst_phy_phy_csr_tx_pcfifo_empty_export), //   phy_csr_tx_pcfifo_empty.export
		.tx_serial_data            (tx_serial_data),                          //            tx_serial_data.tx_serial_data
		.tx_bonding_clocks_ch0     (tx_bonding_clocks_ch0),                   //     tx_bonding_clocks_ch0.clk
		.tx_bonding_clocks_ch1     (tx_bonding_clocks_ch1),                   //     tx_bonding_clocks_ch1.clk
		.tx_analogreset            (tx_analogreset),                          //            tx_analogreset.tx_analogreset
		.tx_digitalreset           (tx_digitalreset),                         //           tx_digitalreset.tx_digitalreset
		.txphy_clk                 (txphy_clk)                                //                 txphy_clk.export
	);

endmodule
